name: Automatic release

on:
  push:
    tags:
    - 'v*'
    - 'sv*'

jobs:
  test:
    name: BLIS ${{ matrix.target.config }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - {
              config: 'x86_64',
              cc: 'gcc',
              cflags: '',
              packages: 'gcc binutils'
            }
          - {
              config: 'cortexa57',
              cc: 'aarch64-linux-gnu-gcc',
              cflags: '-mno-outline-atomics',
              packages: 'gcc-aarch64-linux-gnu libc6-dev-arm64-cross'
            }
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y ${{ matrix.target.packages }}
          ${{ matrix.target.cc }} --version

      - name: Configure project
        run: |
          mkdir dest
          ./configure -t none -p ./dest \
            CC=${{ matrix.target.cc }} \
            CFLAGS=${{ matrix.target.cflags }} \
            ${{ matrix.target.config }}

      - name: Build
        run: |
          make -j

      - name: Quick check
        if: startsWith(matrix.target.config, 'x86')
        run: |
          make -j checkblis-fast

      - name: Install
        run: |
          make install

      - name: Packup
        run: |
          cd dest
          tar -zcvf ../libblis_${{ matrix.target.config }}_${{ matrix.target.cc }}.tar.gz \
            include lib
          cd ..

      - name: Create GH release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Automatic release.
          body: |
            Automatically generated by GitHub actions.
          draft: false
          prerelease: true

      - name: Upload GH release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./libblis_${{ matrix.target.config }}_${{ matrix.target.cc }}.tar.gz
          asset_name: libblis_${{ matrix.target.config }}_${{ matrix.target.cc }}.tar.gz
          asset_content_type: application/x-tar
